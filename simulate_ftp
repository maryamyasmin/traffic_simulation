#!/bin/bash
# Traffic Simulator - Variant with URLs and FTP
# This script simulates network activity over 4 hours (14400 seconds) by:
# - Browsing a list of predefined HTTP/HTTPS URLs
# - Downloading files from an FTP server at 192.168.122.171/uploads using ftpuser credentials
# The script randomly pauses between iterations to mimic realistic user behavior.

# Duration for the script to run (4 hours = 14400 seconds)
DURATION=14400
START_TIME=$(date +%s)

# Define a list of HTTP/HTTPS URLs (hardcoded)
URLS=(
    "https://www.google.com"
    "https://www.wikipedia.org"
    "https://www.reddit.com"
    "https://www.stackoverflow.com"
    "https://www.github.com"
)

# FTP server details and files to download
FTP_SERVER="192.168.122.171"
FTP_USER="ftpuser"
FTP_PASS="ftpuser"
FTP_FILES=(
    "google-chrome.deb"
    "adobe.exe"
)

# Function to simulate HTTP/HTTPS browsing with random link clicking
simulate_http() {
    echo "$(date): Simulating HTTP/HTTPS browsing..."
    for url in "${URLS[@]}"; do
        echo "$(date): Accessing $url"
        # Access the page and output HTTP status code
        curl -s -o /dev/null -w "HTTP Status: %{http_code} - URL: %{url_effective}\n" "$url"
        
        # Fetch page content and extract clickable links (only those starting with http)
        LINKS=$(curl -s "$url" | grep -oP '(?<=href=")[^"]+' | grep '^http' | shuf -n 2)
        for link in $LINKS; do
            echo "$(date): Clicking on link: $link"
            curl -s -o /dev/null "$link"
        done
    done
}

# Function to simulate FTP file downloads
simulate_ftp() {
    echo "$(date): Simulating FTP file downloads..."
    for file in "${FTP_FILES[@]}"; do
        FTP_URL="ftp://$FTP_SERVER/uploads/$file"
        echo "$(date): Downloading $FTP_URL"
        wget -q --ftp-user="$FTP_USER" --ftp-password="$FTP_PASS" -O /dev/null "$FTP_URL"
    done
}

# Main simulation loop: Run until 4 hours have elapsed
echo "$(date): Starting traffic simulation for $DURATION seconds..."
while [ $(( $(date +%s) - START_TIME )) -lt $DURATION ]; do
    simulate_http
    simulate_ftp
    # Random pause between 30 and 90 seconds for realism
    SLEEP_TIME=$(( RANDOM % 61 + 30 ))
    echo "$(date): Sleeping for $SLEEP_TIME seconds..."
    sleep $SLEEP_TIME
done

echo "$(date): Traffic simulation complete."
